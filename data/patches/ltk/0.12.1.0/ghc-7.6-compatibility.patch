Description: Compile with the versions of some modules in GHC 7.6
Forwarded: yes
Author: Iain Lane <laney@debian.org>

Index: b/ltk.cabal
===================================================================
--- a/ltk.cabal
+++ b/ltk.cabal
@@ -16,8 +16,8 @@
 tested-with: GHC ==6.10 || ==6.12 || ==7.0
 
 Library
-    build-depends: Cabal >=1.6.0 && <1.15, base >=4.0.0.0 && <4.6,
-               containers >=0.2 && <0.5, filepath >=1.1.0 && <1.4,
+    build-depends: Cabal >=1.6.0 && <1.17, base >=4.0.0.0 && <4.7,
+               containers >=0.2 && <0.6, filepath >=1.1.0 && <1.4,
                glib >=0.10.0 && <0.13, gtk >=0.10.0 && <0.13,
                mtl >=1.1.0.2 && <2.2, parsec >=2.1.0.1 && <3.2,
                pretty >=1.0.1.0 && <1.2, transformers >=0.2.2.0 && <0.4,
Index: b/src/Text/PrinterParser.hs
===================================================================
--- a/src/Text/PrinterParser.hs
+++ b/src/Text/PrinterParser.hs
@@ -1,4 +1,4 @@
-{-# OPTIONS_GHC -XTypeSynonymInstances -XFlexibleInstances #-}
+{-# OPTIONS_GHC -XTypeSynonymInstances -XFlexibleInstances -XScopedTypeVariables #-}
 --
 -- | Module for saving and restoring preferences and settings
 --
@@ -49,6 +49,7 @@
 import Data.List (foldl')
 import qualified Text.ParserCombinators.Parsec as  P
     ((<?>), CharParser(..), parseFromFile)
+import Control.Exception (catch, IOException)
 
 
 type Printer beta       =   beta -> PP.Doc
@@ -232,7 +233,7 @@
     case res of
                 Left pe -> error $ "Error reading file " ++ show fn ++ " " ++ show pe
                 Right r -> return r)
-    (\ e -> error $ "Error reading file " ++ show fn ++ " " ++ show e)
+    (\ (e :: IOException) -> error $ "Error reading file " ++ show fn ++ " " ++ show e)
 
 parseFields ::  alpha ->  [FieldDescriptionS alpha] ->  P.CharParser () alpha
 parseFields defaultValue descriptions =
Index: b/src/Graphics/UI/Editor/Simple.hs
===================================================================
--- a/src/Graphics/UI/Editor/Simple.hs
+++ b/src/Graphics/UI/Editor/Simple.hs
@@ -63,6 +63,7 @@
 import Graphics.UI.Editor.Basics
        (GUIEvent(..), GUIEventSelector(..), propagateAsChanged,
         genericGUIEvents, activateEvent, Editor)
+import Control.Exception (catch, IOException)
 
 -- ------------------------------------------------------------
 -- * Simple Editors
@@ -360,7 +361,7 @@
         case s of
             Nothing -> return Nothing
             Just s -> catch (liftM Just (readIO s))
-                            (\e -> do
+                            (\ (e :: IOException) -> do
                                 putStrLn ("Generic editor no parse for " ++ s ++ " " ++ show e)
                                 return Nothing)
     return (wid,ginj,gext)
